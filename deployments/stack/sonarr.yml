---
apiVersion: v1
kind: Service
metadata:
  name: sonarr
  labels:
    app: sonarr
spec:
  ports:
  - port: 80
    targetPort: 8989
    name: sonarr
  selector:
    app: sonarr
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarr-downloads-pv
spec:
  storageClassName: local-path
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  csi:
    driver: cephfs.csi.ceph.com
    volumeHandle: sonarr-downloads-pv
    nodeStageSecretRef:
      name: sonarr-ceph
      namespace: default
    nodePublishSecretRef:
      name: sonarr-ceph
      namespace: default
    volumeAttributes:
      monitors: 192.168.1.201
      rootPath: /downloads
      provisionVolume: "false"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-downloads-pvc
spec:
  storageClassName: local-path
  accessModes:
   - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: sonarr-downloads-pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarr-tv-pv
spec:
  storageClassName: local-path
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  csi:
    driver: cephfs.csi.ceph.com
    volumeHandle: sonarr-tv-pv
    nodeStageSecretRef:
      name: sonarr-ceph
      namespace: default
    nodePublishSecretRef:
      name: sonarr-ceph
      namespace: default
    volumeAttributes:
      monitors: 192.168.1.201:6789
      rootPath: /tv
      provisionVolume: "false"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-tv-pvc
spec:
  storageClassName: local-path
  accessModes:
   - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: sonarr-tv-pv
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: sonarr-config-pv
spec:
  storageClassName: local-path
  capacity:
    storage: 5Gi
  accessModes:
    - ReadWriteOnce
  csi:
    driver: cephfs.csi.ceph.com
    volumeHandle: sonarr-config-pv
    nodeStageSecretRef:
      name: sonarr-ceph
      namespace: default
    nodePublishSecretRef:
      name: sonarr-ceph
      namespace: default
    volumeAttributes:
      monitors: 192.168.1.201:6789
      rootPath: /containervolumes/sonarr
      provisionVolume: "false"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: sonarr-config-pvc
spec:
  storageClassName: local-path
  accessModes:
   - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: sonarr-config-pv
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: sonarr
  labels:
    app: sonarr
spec:
  selector:
    matchLabels:
      app: sonarr # has to match .spec.template.metadata.labels
  serviceName: "sonarr"
  replicas: 1
  template:
    metadata:
      labels:
        app: sonarr # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
      - name: sonarr
        image: linuxserver/sonarr:latest
        env:
        - name: TZ
          value: America/Chicago
        ports:
        - containerPort: 8989
          name: sonarr
        volumeMounts:
        - name: sonarr-config
          mountPath: /config
        - name: sonarr-tv
          mountPath: /tv
        - name: sonarr-downloads
          mountPath: /downloads
      volumes:
      - name: sonarr-config
        persistentVolumeClaim:
          claimName: sonarr-config-pvc
          readOnly: false
      - name: sonarr-tv
        persistentVolumeClaim:
          claimName: sonarr-tv-pvc
          readOnly: false
      - name: sonarr-downloads
        persistentVolumeClaim:
          claimName: sonarr-downloads-pvc
          readOnly: false
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sonarr
  labels:
    app: sonarr
  annotations:
    #nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

spec:
  rules:
  - host: sonarr.perihelion.host
    http:
      paths:
      - pathType: Prefix
        path: /
        backend:
          service:
            name: sonarr
            port:
              number: 80
  tls:
  - hosts:
    - sonarr.perihelion.host
    secretName: sonarr.perihelion.host
